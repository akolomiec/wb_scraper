require 'roo'
require 'csv'
require 'selenium-webdriver'

puts "üöÄ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω."

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Selenium (Chrome –≤ headless —Ä–µ–∂–∏–º–µ)
options = Selenium::WebDriver::Chrome::Options.new
options.add_argument('--headless')
options.add_argument('--disable-gpu')
options.add_argument('--no-sandbox')
options.add_argument('--disable-dev-shm-usage')
options.add_argument('--window-size=1920,1080')
options.add_argument('--disable-extensions')
options.add_argument('--disable-infobars')
options.add_argument('--disable-blink-features=AutomationControlled')
options.add_argument('--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0 Safari/537.36')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞
driver = Selenium::WebDriver.for(:chrome, options: options)

xlsx_files = Dir["*.xlsx"]

if xlsx_files.empty?
  puts "‚ö†Ô∏è –ù–µ—Ç .xlsx —Ñ–∞–π–ª–æ–≤ –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏. –ü–æ–ª–æ–∂–∏—Ç–µ –∏—Ö —Å—é–¥–∞ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ."
  exit
end

xlsx_files.each do |filename|
  puts "üìÇ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞: #{filename}..."

  begin
    # –û—Ç–∫—Ä—ã—Ç–∏–µ CSV —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π Windows-1251
    output_file = CSV.open("#{filename}.csv", 'w', col_sep: ';', encoding: 'Windows-1251') do |csv|
      csv << ["–°—Å—ã–ª–∫–∞".encode('Windows-1251'), "–†–µ–∑—É–ª—å—Ç–∞—Ç".encode('Windows-1251')]

      xlsx = Roo::Spreadsheet.open(filename)
      sheet = xlsx.sheet(xlsx.sheets.first)
      links = sheet.column('A')

      if links.compact.empty?
        puts "‚ö†Ô∏è –ö–æ–ª–æ–Ω–∫–∞ 'A' –≤ —Ñ–∞–π–ª–µ #{filename} –ø—É—Å—Ç–∞. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º."
        next
      end

      puts "üîç –ù–∞–π–¥–µ–Ω–æ #{links.size} —Å—Å—ã–ª–æ–∫. –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É..."

      links.each_with_index do |link, i|
        next if link.nil? || link.strip.empty?

        puts "üîé [#{i + 1}/#{links.size}] –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Å—ã–ª–∫–∏: #{link}"

        begin
          driver.navigate.to(link.to_s)
          sleep 3  # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã

          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ "–¢–æ–≤–∞—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç"
          no_goods_element = driver.find_elements(css: '#divGoodsNotFound > div > div > b').find { |el| el.text.include?("–¢–æ–≤–∞—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç") }

          if no_goods_element
            puts "üìù –†–µ–∑—É–ª—å—Ç–∞—Ç: –¢–æ–≤–∞—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç"
            csv << [link.encode('Windows-1251'), "–¢–æ–≤–∞—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç".encode('Windows-1251')]
            next
          end

          # –ü–æ–∏—Å–∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤
          goods_count_element = driver.find_elements(css: '#catalog-seller > span > span').first

          if goods_count_element && !goods_count_element.text.strip.empty?
            product_count = goods_count_element.text.strip.gsub(/\s+/, '')
            puts "üìù –ù–∞–π–¥–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤: #{product_count}"
            csv << [link.encode('Windows-1251'), product_count.encode('Windows-1251')]
          else
            puts "‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º: –ù–µ –Ω–∞–π–¥–µ–Ω–æ"
            csv << [link.encode('Windows-1251'), "–ù–µ –Ω–∞–π–¥–µ–Ω–æ".encode('Windows-1251')]
          end

        rescue => e
          puts "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Å—ã–ª–∫–∏ #{link}: #{e.message}"
          csv << [link.encode('Windows-1251'), "–û—à–∏–±–∫–∞: #{e.message}".encode('Windows-1251')]
        end
      end
    end

    puts "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞: #{filename}. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ #{filename}.csv."

  rescue => e
    puts "üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ #{filename}: #{e.message}"
  end
end

driver.quit
puts "üèÅ –°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É."
